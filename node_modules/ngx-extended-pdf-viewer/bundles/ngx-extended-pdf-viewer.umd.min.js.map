{"version":3,"sources":["ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.component.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.service.ts","ng://ngx-extended-pdf-viewer/lib/ngx-extended-pdf-viewer.module.ts"],"names":["NgxExtendedPdfViewerComponent","Object","defineProperty","prototype","url","Uint8Array","this","_src","buffer","Blob","URL","createObjectURL","length","test","console","warn","base64","binary_string","window","atob","len","bytes","i","charCodeAt","src","_height","h","_this","minHeight","undefined","height","setTimeout","checkHeight","_showSidebarButton","show","factor","navigator","userAgent","Number","_mobileFriendlyZoom","replace","findbarLeft","toString","zoom","isIE","showSidebarButton","toolbarWidth","findbarTop","secondaryToolbarRight","mobileFriendlyZoom","_top","endsWith","substring","calcViewerPositionTop","viewerPositionTop","isPrimaryMenuVisible","emitZoomChange","selectedIndex","sizeSelector","nativeElement","s","options","value","label","zoomChange","emit","emitZoomChangeAfterDelay","ngOnInit","document","querySelectorAll","querySelector","useBrowserLocale","error","callback","e","removeEventListener","initTimeout","openPDF","delayFirstView","addEventListener","ngxExtendedPdfViewerInitialized","overrideDefaultSettings","primaryMenuVisible","isSecondaryMenuVisible","showSecondaryToolbarButton","webViewerLoad","PDFViewerApplication","appConfig","defaultUrl","PDFViewerApplicationOptions","set","language","isViewerEmbedded","pc","getElementById","getElementsByTagName","appendChild","container","getElementsByClassName","clientHeight","includes","mh","innerHeight","getBoundingClientRect","top","onPageChange","inputField","page","isNaN","pageChange","onSpreadChange","newSpread","spreadChange","overrideHistory","filenameForDownload","showSidebarOnLoad","sidebarViewOnLoad","spread","pdfViewer","spreadMode","onResize","listenToURL","pdfLinkService","setHash","eventBus","on","x","pagesLoaded","nameddest","navigateTo","setZoom","pageRendered","password","open","ngOnDestroy","clearTimeout","app","cleanup","close","_boundEvents","unbindWindowEvents","bus","key","unbindEvents","_listeners","body","topLevelElements","children","item","id","removeChild","showHandToolButton","showPagingButtons","showPropertiesButton","showRotateButton","showScrollingButton","showSpreadButton","showSelectToolButton","showBookmarkButton","showDownloadButton","showFindButton","showOpenFileButton","showPresentationModeButton","showPrintButton","showZoomButtons","ngOnChanges","changes","menu","handTool","click","spreadModeOnLoad","zoomAsNumber","String","currentScaleValue","resizeTimeout","doResize","toolbar_1","width","clientWidth","innerWidth","mediumElements","elt","classList","add","remove","smallElements","tiny","Component","args","selector","template","encapsulation","ViewEncapsulation","None","Input","Output","ViewChild","backgroundColor","EventEmitter","NgxExtendedPdfViewerService","find","text","setAttribute","dispatchEvent","Event","findNext","button","findPrevious","Injectable","providedIn","NgxExtendedPdfViewerModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  ViewChild\n} from '@angular/core';\nimport { PagesLoadedEvent } from './pages-loaded-event';\nimport { PageRenderedEvent } from './page-rendered-event';\n\ndeclare var PDFJS: any;\n\n@Component({\n  selector: 'ngx-extended-pdf-viewer',\n  templateUrl: './ngx-extended-pdf-viewer.component.html',\n  styleUrls: ['./viewer-with-images-2.2.199.css', './ngx-extended-pdf-viewer.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NgxExtendedPdfViewerComponent implements OnInit, OnChanges, OnDestroy {\n  public static ngxExtendedPdfViewerInitialized = false;\n\n  private _src: string | ArrayBuffer;\n\n  private resizeTimeout: any = null;\n\n  /**\n   * Number of milliseconds to wait between initializing the PDF viewer and loading the PDF file.\n   * Most users can let this parameter safely at it's default value of zero.\n   * Set this to 1000 or higher if you run into timing problems (typically caused by loading the locale files\n   * after the PDF files, so they are not available when the PDF viewer is initialized).\n   */\n  @Input()\n  delayFirstView = 0;\n\n  /** store the timeout id so it can be canceled if user leaves the page before the PDF is shown */\n  private initTimeout: any;\n\n  public primaryMenuVisible = true;\n\n  @Input()\n  public set src(url: string | ArrayBuffer | Uint8Array) {\n    if (url instanceof Uint8Array) {\n      this._src = (<Uint8Array>url).buffer;\n    } else if (url instanceof Blob) {\n      this._src = URL.createObjectURL(url);\n    } else if (typeof url === 'string') {\n      this._src = url;\n      if (url.length > 980) {\n        // minimal length of a base64 encoded PDF\n        if (url.length % 4 === 0) {\n          if (/^[a-zA-Z\\d\\/+]+={0,2}$/.test(url)) {\n            console.warn('The URL looks like a base64 encoded string. If so, please use the attribute base64 instead of src');\n          }\n        }\n      }\n    } else {\n      this._src = url;\n    }\n  }\n\n  @Input()\n  public set base64Src(base64: string) {\n    const binary_string = window.atob(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    this.src = bytes.buffer;\n  }\n\n  public minHeight: string | undefined = undefined;\n\n  private _height = '100%';\n\n  @Input()\n  public set height(h: string) {\n    this.minHeight = undefined;\n    if (h) {\n      this._height = h;\n    } else {\n      this.height = '100%';\n    }\n    setTimeout(() => {\n      this.checkHeight();\n    });\n  }\n\n  public get height() {\n    return this._height;\n  }\n\n  /**\n   * If this flag is true, this components adds a link to the locale assets. The pdf viewer\n   * sees this link and uses it to load the locale files automatically.\n   * @param useBrowserLocale boolean\n   */\n  @Input()\n  public useBrowserLocale = false;\n\n  @Input()\n  public backgroundColor = '#e8e8eb';\n\n  /** Allows the user to define the name of the file after clicking \"download\" */\n  @Input()\n  public filenameForDownload = 'document.pdf';\n\n  /** Override the default locale. This must be the complete locale name, such as \"es-ES\". The string is allowed to be all lowercase.\n   */\n  @Input()\n  public language: string | undefined = undefined;\n\n  /** By default, listening to the URL is deactivated because often the anchor tag is used for the Angular router */\n  @Input()\n  public listenToURL = false;\n\n  /** Navigate to a certain \"named destination\" */\n  @Input()\n  public nameddest: string | undefined = undefined;\n\n  /** allows you to pass a password to read password-protected files */\n  @Input()\n  public password: string | undefined = undefined;\n\n  public _showSidebarButton = true;\n\n  public viewerPositionTop = '32px';\n\n  public get showSidebarButton() {\n    return this._showSidebarButton;\n  }\n  @Input()\n  public set showSidebarButton(show: boolean) {\n    this._showSidebarButton = show;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((this._mobileFriendlyZoom || '100').replace('%', '')) / 100;\n    }\n\n    if (this._showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n  }\n\n  /** If [showSideBarButton]=\"true\", do you want the sidebar to be shown by default ([showSidebarOnLoad])=\"true\")\n   * or not? By default, this flag is undefined, telling the PDF viewer to use the last setting used with this particular\n   * document, or to hide the sidebar if the document is opened for the first time.\n   */\n  @Input()\n  public showSidebarOnLoad: boolean | undefined = undefined;\n\n  @Input()\n  public showFindButton = true;\n  @Input()\n  public showPagingButtons = true;\n  @Input()\n  public showZoomButtons = true;\n  @Input()\n  public showPresentationModeButton = false;\n  @Input()\n  public showOpenFileButton = true;\n  @Input()\n  public showPrintButton = true;\n  @Input()\n  public showDownloadButton = true;\n  @Input()\n  public showBookmarkButton = true;\n  @Input()\n  public showSecondaryToolbarButton = true;\n  @Input()\n  public showRotateButton = true;\n  @Input()\n  public showSelectToolButton = true;\n  @Input()\n  public handTool = false;\n  @Input()\n  public showHandToolButton = true;\n  @Input()\n  public showScrollingButton = true;\n  @Input()\n  public showSpreadButton = true;\n  @Input()\n  public showPropertiesButton = true;\n\n  @Input()\n  public spread: 'off' | 'even' | 'odd';\n\n  @Output()\n  public spreadChange = new EventEmitter<'off' | 'even' | 'odd'>();\n\n  @Input()\n  public page: number | undefined = undefined;\n\n  @Output()\n  public pageChange = new EventEmitter<number | undefined>();\n\n  @Output()\n  public pagesLoaded = new EventEmitter<PagesLoadedEvent>();\n\n  @Output()\n  public pageRendered = new EventEmitter<PageRenderedEvent>();\n\n  /** Legal values: undefined, 'auto', 'page-actual', 'page_fit', 'page-width', or '50' (or any other percentage) */\n  @Input()\n  public zoom: string | number | undefined = undefined;\n\n  @Output()\n  public zoomChange = new EventEmitter<string | number | undefined>();\n\n  /** This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").\n   */\n  @Input() _mobileFriendlyZoom = '100%';\n\n  public toolbarWidth = '100%';\n\n  // dirty IE11 hack - temporary solution\n  public findbarTop: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public findbarLeft: string | undefined = undefined;\n\n  // dirty IE11 hack - temporary solution\n  public secondaryToolbarRight: string | undefined = undefined;\n\n  public get mobileFriendlyZoom() {\n    return this._mobileFriendlyZoom;\n  }\n  /*\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileFriendlyZoom(zoom: string) {\n    // tslint:disable-next-line:triple-equals - the type conversion is intended\n    if (zoom == 'true') {\n      zoom = '150%';\n      // tslint:disable-next-line:triple-equals - the type conversion is intended\n    } else if (zoom == 'false') {\n      zoom = '100%';\n    }\n    this._mobileFriendlyZoom = zoom;\n    const isIE = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n    let factor = 1;\n    if (isIE) {\n      factor = Number((zoom || '100').replace('%', '')) / 100;\n    }\n    if (this.showSidebarButton) {\n      this.findbarLeft = (68 * factor).toString() + 'px';\n    } else {\n      this.findbarLeft = '0px';\n    }\n    if (isIE) {\n      // dirty, temporary hack\n      this.toolbarWidth = (100 / factor).toString() + '%';\n      this.findbarTop = (32 * factor).toString() + 'px';\n      this.secondaryToolbarRight = (252 * (factor - 1)).toString() + 'px';\n    }\n  }\n\n  /** Deprecated. Please use [mobileFriendlyZoom] instead.\n   * This attributes allows you to increase the size of the UI elements so you can use them on small mobile devices.\n   * This attribute is a string with a percent character at the end (e.g. \"150%\").*/\n  @Input()\n  public set mobileZoom(mobileFriendlyZoom: string) {\n    this.mobileFriendlyZoom = mobileFriendlyZoom;\n  }\n\n  @ViewChild('sizeSelector') sizeSelector: any;\n\n  private _top: string | undefined = undefined;\n\n  public get sidebarPositionTop(): string {\n    if (this._top) {\n      return this._top;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        return (0.32 * zoom).toString() + 'px';\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        return this.mobileFriendlyZoom;\n      }\n    }\n    return '32px';\n  }\n  public calcViewerPositionTop(): void {\n    if (this._top) {\n      this.viewerPositionTop = this._top;\n      return;\n    }\n    if (this.mobileFriendlyZoom) {\n      if (this.mobileFriendlyZoom.endsWith('%')) {\n        const zoom = Number(this.mobileFriendlyZoom.substring(0, this.mobileFriendlyZoom.length - 1));\n        if (!this.isPrimaryMenuVisible()) {\n          this.viewerPositionTop = '0';\n        } else {\n          this.viewerPositionTop = (1 + 0.32 * zoom).toString() + 'px';\n        }\n        return;\n      }\n      if (this.mobileFriendlyZoom.endsWith('px')) {\n        this.viewerPositionTop = this.mobileFriendlyZoom;\n        return;\n      }\n    }\n    if (this.isPrimaryMenuVisible()) {\n      this.viewerPositionTop = '32px';\n    } else {\n      this.viewerPositionTop = '0';\n    }\n  }\n\n  constructor() {}\n\n  public emitZoomChange(): void {\n    const selectedIndex = this.sizeSelector.nativeElement.selectedIndex;\n    if (selectedIndex) {\n      const s = this.sizeSelector.nativeElement.options[selectedIndex] as HTMLOptionElement;\n      let value: number | string = s.label;\n\n      if (value.endsWith('%')) {\n        value = Number(value.replace('%', ''));\n      } else {\n        value = s.value;\n      }\n      this.zoomChange.emit(value);\n    }\n  }\n\n  public emitZoomChangeAfterDelay(): void {\n    setTimeout(() => {\n      this.emitZoomChange();\n    }, 10);\n  }\n\n  ngOnInit() {\n    const langLinks = document.querySelectorAll('link[type=\"application/l10n\"]');\n    const langCount = langLinks.length;\n\n    if (langCount === 0) {\n      const dict = document.querySelector('script[type=\"application/l10n\"]');\n      if (!dict) {\n        if (!this.useBrowserLocale) {\n          console.error(\n            \"If you set the attribute 'useBrowserLocale' to false, you must provide the translations yourself in a script or link tag.\"\n          );\n          console.error('The easiest way to do this is to add them to the index.html.');\n        }\n      } else if (this.useBrowserLocale) {\n        console.error(\n          \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n        );\n      }\n    } else if (this.useBrowserLocale) {\n      console.error(\n        \"Please set the attribute 'useBrowserLocale' to false if you provide the translations yourself in a script or link tag.\"\n      );\n    }\n    const callback = e => {\n      document.removeEventListener('localized', callback);\n      this.initTimeout = setTimeout(() => {\n        this.openPDF();\n      }, this.delayFirstView);\n    };\n\n    document.addEventListener('localized', callback);\n\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      console.error(\"You're trying to open two instances of the PDF viewer. Most likely, this will result in errors.\");\n    }\n    document.addEventListener('webviewerloaded', () => {\n      this.overrideDefaultSettings();\n    });\n\n    setTimeout(() => {\n      // This initializes the webviewer, the file may be passed in to it to initialize the viewer with a pdf directly\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n      (<any>window).webViewerLoad();\n      (<any>window).PDFViewerApplication.appConfig.defaultUrl = ''; // IE bugfix\n      (<any>window).PDFViewerApplicationOptions.set('locale', this.language);\n\n      (<any>window).PDFViewerApplication.isViewerEmbedded = true;\n      this.overrideDefaultSettings();\n\n      const pc = document.getElementById('printContainer');\n      if (pc) {\n        document.getElementsByTagName('body')[0].appendChild(pc);\n      }\n    }, 0);\n  }\n\n  public checkHeight(): void {\n    const container = document.getElementsByClassName('zoom')[0];\n    if (container.clientHeight === 0 && this._height.includes('%')) {\n      const available = window.innerHeight;\n      const rect = container.getBoundingClientRect();\n      const top = rect.top;\n      let mh = available - top;\n      const factor = Number(this._height.replace('%', ''));\n      mh = (mh * factor) / 100;\n      if (mh > 100) {\n        this.minHeight = mh + 'px';\n      } else {\n        this.minHeight = '100px';\n      }\n    }\n  }\n\n  public onPageChange(): void {\n    setTimeout(() => {\n      const inputField = document.getElementById('pageNumber') as HTMLInputElement;\n      let page: number | undefined = Number(inputField.value);\n      if (isNaN(page)) {\n        page = undefined;\n      }\n      this.pageChange.emit(page);\n    });\n  }\n\n  public onSpreadChange(newSpread: 'off' | 'even' | 'odd'): void {\n    this.spreadChange.emit(newSpread);\n  }\n\n  private overrideDefaultSettings() {\n    (<any>window).PDFViewerApplication.overrideHistory = {};\n\n    if ((<any>window).PDFViewerApplication.appConfig) {\n      (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n    } else {\n      (<any>window).PDFViewerApplicationOptions.set('filenameForDownload', this.filenameForDownload);\n    }\n    if (this.showSidebarButton) {\n      if (this.showSidebarOnLoad !== undefined) {\n        (<any>window).PDFViewerApplication.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n        if ((<any>window).PDFViewerApplication.appConfig) {\n          (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n        }\n        (<any>window).PDFViewerApplication.overrideHistory.sidebarViewOnLoad = this.showSidebarOnLoad ? 1 : 0;\n      }\n    } else {\n      (<any>window).PDFViewerApplication.sidebarViewOnLoad = 0;\n      if ((<any>window).PDFViewerApplication.appConfig) {\n        (<any>window).PDFViewerApplication.appConfig.sidebarViewOnLoad = 0;\n      }\n      (<any>window).PDFViewerApplication.overrideHistory.sidebarViewOnLoad = 0;\n    }\n\n    if (this.spread === 'even') {\n      (<any>window).PDFViewerApplicationOptions.set('spreadModeOnLoad', 2);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n      }\n      this.onSpreadChange('even');\n    } else if (this.spread === 'odd') {\n      (<any>window).PDFViewerApplicationOptions.set('spreadModeOnLoad', 1);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n      }\n      this.onSpreadChange('odd');\n    } else {\n      (<any>window).PDFViewerApplicationOptions.set('spreadModeOnLoad', 0);\n      if ((<any>window).PDFViewerApplication.pdfViewer) {\n        (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n      }\n      this.onSpreadChange('off');\n    }\n  }\n\n  private openPDF() {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = true;\n    this.onResize();\n    if (!this.listenToURL) {\n      (<any>window).PDFViewerApplication.pdfLinkService.setHash = function() {};\n    }\n    this.initTimeout = null;\n    (<any>window).PDFViewerApplication.eventBus.on('pagesloaded', (x: PagesLoadedEvent) => {\n      this.pagesLoaded.emit(x);\n      if (this.nameddest) {\n        (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n      }\n      this.overrideDefaultSettings();\n      this.setZoom();\n    });\n    (<any>window).PDFViewerApplication.eventBus.on('pagerendered', (x: PageRenderedEvent) => {\n      this.pageRendered.emit(x);\n    });\n    this.checkHeight();\n    // open a file in the viewer\n    if (!!this._src) {\n      const options = {\n        password: this.password\n      };\n      (<any>window).PDFViewerApplication.open(this._src, options);\n    }\n    setTimeout(() => {\n      if (this.page) {\n        (<any>window).PDFViewerApplication.page = this.page;\n      }\n    }, 100);\n  }\n\n  public ngOnDestroy(): void {\n    NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized = false;\n    if (this.initTimeout) {\n      clearTimeout(this.initTimeout);\n      this.initTimeout = undefined;\n    }\n    const app = (<any>window).PDFViewerApplication;\n    if (app) {\n      app.cleanup();\n      app.close();\n      if (app._boundEvents) {\n        app.unbindWindowEvents();\n      }\n      const bus = app.eventBus as any;\n      if (bus) {\n        app.unbindEvents();\n        for (const key in bus._listeners) {\n          if (bus._listeners[key]) {\n            bus._listeners[key] = undefined;\n          }\n        }\n      }\n      app.eventBus = null;\n    }\n\n    const body = document.getElementsByTagName('body');\n    if (body[0]) {\n      const topLevelElements = body[0].children;\n      for (let i = topLevelElements.length - 1; i >= 0; i--) {\n        const e = topLevelElements.item(i);\n        if (e && e.id === 'printContainer') {\n          body[0].removeChild(e);\n        } else if (e && e.id === 'fileInput') {\n          body[0].removeChild(e);\n        }\n      }\n    }\n  }\n\n  private isSecondaryMenuVisible(): boolean {\n    const visible =\n      this.showHandToolButton ||\n      this.showPagingButtons ||\n      this.showPropertiesButton ||\n      this.showRotateButton ||\n      this.showScrollingButton ||\n      this.showRotateButton ||\n      this.showSpreadButton ||\n      this.showSelectToolButton;\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  private isPrimaryMenuVisible(): boolean {\n    const visible =\n      this.showBookmarkButton ||\n      this.showDownloadButton ||\n      this.showFindButton ||\n      this.showOpenFileButton ||\n      this.showPagingButtons ||\n      this.showPresentationModeButton ||\n      this.showPrintButton ||\n      this.showPropertiesButton ||\n      this.showSidebarButton ||\n      this.showSecondaryToolbarButton ||\n      this.showZoomButtons;\n\n    if (visible) {\n      return true;\n    }\n    return false;\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      if ('src' in changes) {\n        if (!!this._src) {\n          this.overrideDefaultSettings();\n          (<any>window).PDFViewerApplication.open(this._src);\n        }\n      }\n      if ('zoom' in changes) {\n        this.setZoom();\n      }\n\n      if ('handTool' in changes) {\n        if (this.handTool) {\n          const menu = document.getElementsByClassName('handTool');\n          if (menu && menu[0]) {\n            (menu[0] as HTMLButtonElement).click();\n          }\n        } else {\n          const menu = document.getElementsByClassName('selectTool');\n          if (menu && menu[0]) {\n            (menu[0] as HTMLButtonElement).click();\n          }\n        }\n      }\n      if ('page' in changes) {\n        if (this.page) {\n          (<any>window).PDFViewerApplication.page = this.page;\n        }\n      }\n      if ('filenameForDownload' in changes) {\n        (<any>window).PDFViewerApplication.appConfig.filenameForDownload = this.filenameForDownload;\n      }\n      if ('nameddest' in changes) {\n        if (this.nameddest) {\n          (<any>window).PDFViewerApplication.pdfLinkService.navigateTo(this.nameddest);\n        }\n      }\n\n      if ('spread' in changes) {\n        if (this.spread === 'even') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 2;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 2;\n          this.onSpreadChange('even');\n        } else if (this.spread === 'odd') {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 1;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 1;\n          this.onSpreadChange('odd');\n        } else {\n          (<any>window).PDFViewerApplication.spreadModeOnLoad = 0;\n          (<any>window).PDFViewerApplication.pdfViewer.spreadMode = 0;\n          this.onSpreadChange('off');\n        }\n      }\n\n      this.primaryMenuVisible = true;\n      if (!this.isSecondaryMenuVisible()) {\n        this.showSecondaryToolbarButton = false;\n      }\n      if (!this.showSecondaryToolbarButton) {\n        if (!this.isPrimaryMenuVisible()) {\n          this.primaryMenuVisible = false;\n        }\n      }\n      this.calcViewerPositionTop();\n    }\n  }\n\n  private setZoom() {\n    let zoomAsNumber = this.zoom;\n    if (String(zoomAsNumber).endsWith('%')) {\n      zoomAsNumber = Number(String(zoomAsNumber).replace('%', '')) / 100;\n    } else if (!isNaN(Number(zoomAsNumber))) {\n      zoomAsNumber = Number(zoomAsNumber) / 100;\n    }\n    if (!zoomAsNumber) {\n      zoomAsNumber = 'auto';\n    }\n    (<any>window).PDFViewerApplication.pdfViewer.currentScaleValue = zoomAsNumber;\n  }\n\n  public onResize(): void {\n    clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = setTimeout(this.doResize, 100);\n  }\n\n  private doResize(): void {\n    const pdfViewer = document.getElementsByClassName('html');\n    if (pdfViewer && pdfViewer.length > 0) {\n      const toolbar = pdfViewer[0].getElementsByClassName('toolbar');\n      if (toolbar && toolbar.length > 0) {\n        const width = toolbar[0].clientWidth;\n        if (window.innerWidth - width > 50) {\n          const mediumElements = toolbar[0].getElementsByClassName('hiddenMediumView');\n          for (let i = 0; i < mediumElements.length; i++) {\n            const elt = mediumElements[i] as HTMLElement;\n            if (width < 650) {\n              elt.classList.add('hidden');\n            } else {\n              elt.classList.remove('hidden');\n            }\n          }\n          const smallElements = toolbar[0].getElementsByClassName('hiddenSmallView');\n          for (let i = 0; i < smallElements.length; i++) {\n            const elt = smallElements[i] as HTMLElement;\n            if (width < 590) {\n              elt.classList.add('hidden');\n            } else {\n              elt.classList.remove('hidden');\n            }\n          }\n\n          const tinyElement = document.getElementById('scaleSelectContainer');\n          const tiny = tinyElement as HTMLElement;\n          if (width < 485) {\n            // not perfect, but good first approximation\n            tiny.classList.add('hidden');\n          } else {\n            tiny.classList.remove('hidden');\n          }\n        }\n      }\n\n      /* TODO: this is the complete list of items to consider:\n    @media all and (max-width: 700px) {\n      #outerContainer .hiddenMediumView {\n        display: none;\n      }\n      #outerContainer .visibleMediumView {\n        display: inherit;\n      }\n    }\n\n    @media all and (max-width: 640px) {\n      .hiddenSmallView, .hiddenSmallView * {\n        display: none;\n      }\n      .visibleSmallView {\n        display: inherit;\n      }\n      .toolbarButtonSpacer {\n        width: 0;\n      }\n      html[dir='ltr'] .findbar {\n        left: 38px;\n      }\n      html[dir='rtl'] .findbar {\n        right: 38px;\n      }\n    }\n\n    @media all and (max-width: 535px) {\n      #scaleSelectContainer {\n        display: none;\n      }\n    }\n    */\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxExtendedPdfViewerService {\n  constructor() {}\n\n  public find(text: string): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call find() later.\");\n      return false;\n    } else {\n      const inputField = document.getElementById('findInput');\n      if (inputField) {\n        inputField.setAttribute('value', text);\n        inputField.dispatchEvent(new Event('input'));\n        return true;\n      } else {\n        // tslint:disable-next-line:quotemark\n        console.error(\"Unexpected error: the input field used to search isn't part of the DOM.\");\n        return false;\n      }\n    }\n  }\n\n  public findNext(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findNext() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findNext');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n\n  public findPrevious(): boolean {\n    if (!NgxExtendedPdfViewerComponent.ngxExtendedPdfViewerInitialized) {\n      // tslint:disable-next-line:quotemark\n      console.error(\"The PDF viewer hasn't finished initializing. Please call findPrevious() later.\");\n      return false;\n    } else {\n      const button = document.getElementById('findPrevious');\n      if (button) {\n        button.click();\n        return true;\n      }\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxExtendedPdfViewerComponent } from './ngx-extended-pdf-viewer.component';\nimport { NgxExtendedPdfViewerService } from './ngx-extended-pdf-viewer.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxExtendedPdfViewerComponent],\n  providers: [NgxExtendedPdfViewerService],\n  exports: [NgxExtendedPdfViewerComponent]\n})\nexport class NgxExtendedPdfViewerModule {}\n"]}